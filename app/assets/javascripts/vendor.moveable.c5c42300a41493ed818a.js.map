{"version":3,"file":"vendor.moveable.c5c42300a41493ed818a.js","mappings":"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","sources":["webpack://Gwaphics/./node_modules/@moveable/matrix/dist/matrix.esm.js"],"sourcesContent":["/*\nCopyright (c) 2019 Daybrush\nname: @moveable/matrix\nlicense: MIT\nauthor: Daybrush\nrepository: git+https://github.com/daybrush/moveable.git\nversion: 0.3.1\n*/\nfunction add(matrix, inverseMatrix, startIndex, endIndex, fromStart, k) {\n  for (var i = startIndex; i < endIndex; ++i) {\n    matrix[i] += matrix[fromStart + i - startIndex] * k;\n    inverseMatrix[i] += inverseMatrix[fromStart + i - startIndex] * k;\n  }\n}\n\nfunction swap(matrix, inverseMatrix, startIndex, endIndex, fromStart) {\n  for (var i = startIndex; i < endIndex; ++i) {\n    var v = matrix[i];\n    var iv = inverseMatrix[i];\n    matrix[i] = matrix[fromStart + i - startIndex];\n    matrix[fromStart + i - startIndex] = v;\n    inverseMatrix[i] = inverseMatrix[fromStart + i - startIndex];\n    inverseMatrix[fromStart + i - startIndex] = iv;\n  }\n}\n\nfunction divide(matrix, inverseMatrix, startIndex, endIndex, k) {\n  for (var i = startIndex; i < endIndex; ++i) {\n    matrix[i] /= k;\n    inverseMatrix[i] /= k;\n  }\n}\n\nfunction ignoreDimension(matrix, m, n) {\n  if (n === void 0) {\n    n = Math.sqrt(matrix.length);\n  }\n\n  var newMatrix = matrix.slice();\n\n  for (var i = 0; i < n; ++i) {\n    newMatrix[i * n + m - 1] = 0;\n    newMatrix[(m - 1) * n + i] = 0;\n  }\n\n  newMatrix[(m - 1) * (n + 1)] = 1;\n  return newMatrix;\n}\nfunction invert(matrix, n) {\n  if (n === void 0) {\n    n = Math.sqrt(matrix.length);\n  }\n\n  var newMatrix = matrix.slice();\n  var inverseMatrix = createIdentityMatrix(n);\n\n  for (var i = 0; i < n; ++i) {\n    var startIndex = n * i;\n    var endIndex = n * (i + 1);\n    var identityIndex = startIndex + i;\n\n    if (newMatrix[identityIndex] === 0) {\n      for (var j = i + 1; j < n; ++j) {\n        if (newMatrix[n * j + i]) {\n          swap(newMatrix, inverseMatrix, startIndex, endIndex, n * j);\n          break;\n        }\n      }\n    }\n\n    if (newMatrix[identityIndex]) {\n      divide(newMatrix, inverseMatrix, startIndex, endIndex, newMatrix[identityIndex]);\n    } else {\n      // no inverse matrix\n      return [];\n    }\n\n    for (var j = 0; j < n; ++j) {\n      var targetStartIndex = n * j;\n      var targetEndIndex = targetStartIndex + n;\n      var targetIndex = targetStartIndex + i;\n      var target = newMatrix[targetIndex];\n\n      if (target === 0 || i === j) {\n        continue;\n      }\n\n      add(newMatrix, inverseMatrix, targetStartIndex, targetEndIndex, startIndex, -target);\n    }\n  }\n\n  return inverseMatrix;\n}\nfunction transpose(matrix, n) {\n  if (n === void 0) {\n    n = Math.sqrt(matrix.length);\n  }\n\n  var newMatrix = [];\n\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0; j < n; ++j) {\n      newMatrix[j * n + i] = matrix[n * i + j];\n    }\n  }\n\n  return newMatrix;\n}\nfunction getRad(pos1, pos2) {\n  var distX = pos2[0] - pos1[0];\n  var distY = pos2[1] - pos1[1];\n  var rad = Math.atan2(distY, distX);\n  return rad >= 0 ? rad : rad + Math.PI * 2;\n}\nfunction getOrigin(matrix, n) {\n  if (n === void 0) {\n    n = Math.sqrt(matrix.length);\n  }\n\n  var originMatrix = [];\n\n  for (var i = 0; i < n - 1; ++i) {\n    originMatrix[i] = matrix[(i + 1) * n - 1];\n  }\n\n  originMatrix[n - 1] = 0;\n  return originMatrix;\n}\nfunction convertPositionMatrix(matrix, n) {\n  var newMatrix = matrix.slice();\n\n  for (var i = matrix.length; i < n - 1; ++i) {\n    newMatrix[i] = 0;\n  }\n\n  newMatrix[n - 1] = 1;\n  return newMatrix;\n}\nfunction convertDimension(matrix, n, m) {\n  if (n === void 0) {\n    n = Math.sqrt(matrix.length);\n  } // n < m\n\n\n  if (n === m) {\n    return matrix;\n  }\n\n  var newMatrix = createIdentityMatrix(m);\n  var length = Math.min(n, m);\n\n  for (var i = 0; i < length - 1; ++i) {\n    for (var j = 0; j < length - 1; ++j) {\n      newMatrix[i * m + j] = matrix[i * n + j];\n    }\n\n    newMatrix[(i + 1) * m - 1] = matrix[(i + 1) * n - 1];\n    newMatrix[(m - 1) * m + i] = matrix[(n - 1) * n + i];\n  }\n\n  newMatrix[m * m - 1] = matrix[n * n - 1];\n  return newMatrix;\n}\nfunction multiplies(n) {\n  var matrixes = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    matrixes[_i - 1] = arguments[_i];\n  }\n\n  var m = createIdentityMatrix(n);\n  matrixes.forEach(function (matrix) {\n    m = multiply(m, matrix, n);\n  });\n  return m;\n}\nfunction multiply(matrix, matrix2, n) {\n  var newMatrix = []; // n * m X m * k\n\n  var m = matrix.length / n;\n  var k = matrix2.length / m;\n\n  if (!m) {\n    return matrix2;\n  } else if (!k) {\n    return matrix;\n  }\n\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0; j < k; ++j) {\n      newMatrix[i * k + j] = 0;\n\n      for (var l = 0; l < m; ++l) {\n        newMatrix[i * k + j] += matrix[i * m + l] * matrix2[l * k + j];\n      }\n    }\n  } // n * k\n\n\n  return newMatrix;\n}\nfunction multiplyCSS(matrix, matrix2, n) {\n  if (n === void 0) {\n    n = Math.sqrt(matrix.length);\n  }\n\n  var newMatrix = []; // n(y) * m(x) X m(y) * k(x)\n\n  var m = matrix.length / n;\n  var k = matrix2.length / m;\n\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0; j < k; ++j) {\n      newMatrix[i + j * k] = 0;\n\n      for (var l = 0; l < m; ++l) {\n        newMatrix[i + j * k] += matrix[i + l * m] * matrix2[l + j * k];\n      }\n    }\n  } // n * k\n\n\n  return newMatrix;\n}\nfunction sum() {\n  var nums = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nums[_i] = arguments[_i];\n  }\n\n  var length = nums.length;\n  var total = 0;\n\n  for (var i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n\n  return total;\n}\nfunction average() {\n  var nums = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    nums[_i] = arguments[_i];\n  }\n\n  var length = nums.length;\n  var total = 0;\n\n  for (var i = length - 1; i >= 0; --i) {\n    total += nums[i];\n  }\n\n  return length ? total / length : 0;\n}\nfunction plus(pos1, pos2) {\n  var length = Math.min(pos1.length, pos2.length);\n  var nextPos = pos1.slice();\n\n  for (var i = 0; i < length; ++i) {\n    nextPos[i] = nextPos[i] + pos2[i];\n  }\n\n  return nextPos;\n}\nfunction minus(pos1, pos2) {\n  var length = Math.min(pos1.length, pos2.length);\n  var nextPos = pos1.slice();\n\n  for (var i = 0; i < length; ++i) {\n    nextPos[i] = nextPos[i] - pos2[i];\n  }\n\n  return nextPos;\n}\nfunction caculate(matrix, matrix2, n) {\n  if (n === void 0) {\n    n = matrix2.length;\n  }\n\n  var result = multiply(matrix, matrix2, n);\n  var k = result[n - 1];\n  return result.map(function (v) {\n    return v / k;\n  });\n}\nfunction rotate(pos, rad) {\n  return caculate(createRotateMatrix(rad, 3), convertPositionMatrix(pos, 3));\n}\nfunction convertCSStoMatrix(a) {\n  if (a.length === 6) {\n    return [a[0], a[2], a[4], a[1], a[3], a[5], 0, 0, 1];\n  }\n\n  return transpose(a);\n}\nfunction convertMatrixtoCSS(a) {\n  if (a.length === 9) {\n    return [a[0], a[3], a[1], a[4], a[2], a[5]];\n  }\n\n  return transpose(a);\n}\nfunction createRotateMatrix(rad, n) {\n  var cos = Math.cos(rad);\n  var sin = Math.sin(rad);\n  var m = createIdentityMatrix(n);\n  m[0] = cos;\n  m[1] = -sin;\n  m[n] = sin;\n  m[n + 1] = cos;\n  return m;\n}\nfunction createIdentityMatrix(n) {\n  var length = n * n;\n  var matrix = [];\n\n  for (var i = 0; i < length; ++i) {\n    matrix[i] = i % (n + 1) ? 0 : 1;\n  }\n\n  return matrix;\n}\nfunction createScaleMatrix(scale, n) {\n  var m = createIdentityMatrix(n);\n  var length = Math.min(scale.length, n - 1);\n\n  for (var i = 0; i < length; ++i) {\n    m[(n + 1) * i] = scale[i];\n  }\n\n  return m;\n}\nfunction createOriginMatrix(origin, n) {\n  var m = createIdentityMatrix(n);\n  var length = Math.min(origin.length, n - 1);\n\n  for (var i = 0; i < length; ++i) {\n    m[n * (i + 1) - 1] = origin[i];\n  }\n\n  return m;\n}\nfunction createWarpMatrix(pos0, pos1, pos2, pos3, nextPos0, nextPos1, nextPos2, nextPos3) {\n  var x0 = pos0[0],\n      y0 = pos0[1];\n  var x1 = pos1[0],\n      y1 = pos1[1];\n  var x2 = pos2[0],\n      y2 = pos2[1];\n  var x3 = pos3[0],\n      y3 = pos3[1];\n  var u0 = nextPos0[0],\n      v0 = nextPos0[1];\n  var u1 = nextPos1[0],\n      v1 = nextPos1[1];\n  var u2 = nextPos2[0],\n      v2 = nextPos2[1];\n  var u3 = nextPos3[0],\n      v3 = nextPos3[1];\n  var matrix = [x0, y0, 1, 0, 0, 0, -u0 * x0, -u0 * y0, 0, 0, 0, x0, y0, 1, -v0 * x0, -v0 * y0, x1, y1, 1, 0, 0, 0, -u1 * x1, -u1 * y1, 0, 0, 0, x1, y1, 1, -v1 * x1, -v1 * y1, x2, y2, 1, 0, 0, 0, -u2 * x2, -u2 * y2, 0, 0, 0, x2, y2, 1, -v2 * x2, -v2 * y2, x3, y3, 1, 0, 0, 0, -u3 * x3, -u3 * y3, 0, 0, 0, x3, y3, 1, -v3 * x3, -v3 * y3];\n  var inverseMatrix = invert(matrix, 8);\n\n  if (!inverseMatrix.length) {\n    return [];\n  }\n\n  var h = multiply(inverseMatrix, [u0, v0, u1, v1, u2, v2, u3, v3], 8);\n  h[8] = 1;\n  return convertDimension(h, 3, 4);\n}\n\nexport { average, caculate, convertCSStoMatrix, convertDimension, convertMatrixtoCSS, convertPositionMatrix, createIdentityMatrix, createOriginMatrix, createRotateMatrix, createScaleMatrix, createWarpMatrix, getOrigin, getRad, ignoreDimension, invert, minus, multiplies, multiply, multiplyCSS, plus, rotate, sum, transpose };\n//# sourceMappingURL=matrix.esm.js.map\n"],"names":["add","matrix","inverseMatrix","startIndex","endIndex","fromStart","k","i","swap","v","iv","divide","ignoreDimension","m","n","Math","sqrt","length","newMatrix","slice","invert","createIdentityMatrix","identityIndex","j","targetStartIndex","targetEndIndex","target","transpose","getRad","pos1","pos2","distX","distY","rad","atan2","PI","getOrigin","originMatrix","convertPositionMatrix","convertDimension","min","multiplies","matrixes","_i","arguments","forEach","multiply","matrix2","l","multiplyCSS","average","nums","total","plus","nextPos","minus","caculate","result","map","rotate","pos","createRotateMatrix","convertCSStoMatrix","a","convertMatrixtoCSS","cos","sin","createScaleMatrix","scale","createOriginMatrix","origin","createWarpMatrix","pos0","pos3","nextPos0","nextPos1","nextPos2","nextPos3","x0","y0","x1","y1","x2","y2","x3","y3","u0","v0","u1","v1","u2","v2","u3","v3","h"],"sourceRoot":""}